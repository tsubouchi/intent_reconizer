apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: agi-egg-isr-router
  namespace: default
  labels:
    app: agi-egg
    component: isr-router
    version: v3.1.0
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/launch-stage: GA
spec:
  template:
    metadata:
      annotations:
        # Autoscaling configuration
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/maxScale: "100"
        autoscaling.knative.dev/target: "80"

        # CPU and Memory allocation
        run.googleapis.com/cpu-throttling: "false"
        run.googleapis.com/execution-environment: gen2

        # VPC connector for private resources
        run.googleapis.com/vpc-access-connector: projects/agi-egg-production/locations/us-central1/connectors/agi-egg-connector
        run.googleapis.com/vpc-access-egress: private-ranges-only

        # Session affinity for WebSocket
        run.googleapis.com/sessionAffinity: "true"

    spec:
      containerConcurrency: 1000
      timeoutSeconds: 300
      serviceAccountName: isr-router-sa@agi-egg-production.iam.gserviceaccount.com

      containers:
      - name: isr-router
        image: gcr.io/agi-egg-production/isr-router:v3.1.0
        ports:
        - name: http1
          containerPort: 8080
          protocol: TCP

        env:
        # Service Configuration
        - name: NODE_ENV
          value: "production"
        - name: SERVICE_NAME
          value: "isr-router"
        - name: SERVICE_VERSION
          value: "v3.1.0"
        - name: PORT
          value: "8080"

        # GCP Configuration
        - name: GCP_PROJECT_ID
          value: "agi-egg-production"
        - name: GCP_REGION
          value: "us-central1"

        # Firestore Configuration
        - name: FIRESTORE_DATABASE
          value: "(default)"

        # Secret Manager References
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: gemini-api-key
              key: latest

        - name: FIREBASE_CONFIG
          valueFrom:
            secretKeyRef:
              name: firebase-config
              key: latest

        # ISR Configuration
        - name: ISR_CHUNK_SIZE
          value: "500"
        - name: ISR_SUMMARY_INTERVAL
          value: "5"
        - name: ISR_SESSION_TIMEOUT
          value: "300000"

        # IMS Configuration
        - name: IMS_CACHE_TTL
          value: "60000"
        - name: IMS_DEFAULT_MODEL
          value: "gemini-2.0-flash-exp"

        # AOL Configuration
        - name: AOL_DEFAULT_AUTONOMY
          value: "2" # SUPERVISED
        - name: AOL_MAX_RISK_SCORE
          value: "70"

        # Monitoring
        - name: ENABLE_TRACING
          value: "true"
        - name: ENABLE_METRICS
          value: "true"
        - name: LOG_LEVEL
          value: "info"

        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "4"
            memory: "8Gi"

        # Health checks
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2

        # Startup probe for slow starts
        startupProbe:
          httpGet:
            path: /health/startup
            port: 8080
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: agi-egg-isr-router-hpa
spec:
  scaleTargetRef:
    apiVersion: serving.knative.dev/v1
    kind: Service
    name: agi-egg-isr-router
  minReplicas: 1
  maxReplicas: 100
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max